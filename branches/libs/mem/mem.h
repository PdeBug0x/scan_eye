#ifndef _MEM_H_
#define _MEM_H_

#include <stdio.h>

#define CHUNK_SIZE 4

/*****************************************************
 * @mem_calloc： 分配内存数组
 *
 * @count: 分配内存单元的个数
 * @size: 将要分配内存单元大小
 *
 * @return: 若成功则返回移动太分配好的内存指针，否则返回NULL
 ****************************************************/
//void* mem_calloc(size_t count, size_t size);

/*****************************************************
 * @mem_malloc： 分配内存
 *
 * @size: 将要分配内存大小
 *
 * @return: 若成功则返回移动太分配好的内存指针，否则返回NULL
 ****************************************************/
void* mem_malloc(const size_t size);

/****************************************************
 *@mem_free：释放动态分配的内存
 *
 *@ptr: 将要释放内存的指针
 *
 *@return:
 ***************************************************/
void mem_free(void *ptr);

/****************************************************
 *@mem_strdup：打印内存中的C串
 *
 *@str: 将要导出的C串的地址
 *
 *@return:若成功则返回导出C串指针末尾已经添加'\0',记得使用free释放内存
 *		  否则返回NULL
 ***************************************************/
char* mem_strdup(const char *str);

/****************************************************
 *@mem_strndup：打印内存中的C串
 *
 *@str: 将要导出的C串的地址
 *@n: 导出C串的字符数
 *
 *@return:若成功则返回导出C串指针末尾已经添加'\0',记得使用free释放内存
 *		  否则返回NULL
 ***************************************************/
char* mem_strndup(const char *str, size_t n);

#endif


